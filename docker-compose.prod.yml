version: '3'

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: band-sheets-mongodb-prod
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_prod:/data/db
    networks:
      - band-sheets-network-prod
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend service
  backend:
    build:
      context: ./band-sheets-backend
      dockerfile: Dockerfile.prod
    container_name: band-sheets-backend-prod
    ports:
      - "5050:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongodb:27017/bandsheets
      # In production, use secrets management or environment variables
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=30d
      - JWT_COOKIE_EXPIRES_IN=30
    depends_on:
      - mongodb
    networks:
      - band-sheets-network-prod
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service
  frontend:
    build:
      context: ./band-sheet-creator
      dockerfile: Dockerfile.prod
    container_name: band-sheets-frontend-prod
    # No need to expose ports directly as nginx will proxy
    # ports:
    #   - "80:80"
    environment:
      # Don't set REACT_APP_API_URL here, let the frontend code handle it dynamically
      # based on the current domain
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - band-sheets-network-prod
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  # Nginx service for reverse proxy and SSL termination
  nginx:
    image: nginx:latest
    container_name: band-sheets-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - band-sheets-network-prod
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot service for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: band-sheets-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always
    networks:
      - band-sheets-network-prod

networks:
  band-sheets-network-prod:
    driver: bridge

volumes:
  mongodb_data_prod: